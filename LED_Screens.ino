// This is working

// Setup
#include <FastLED.h>
#define NUM_LEDS 512
#define DATA_PIN A0
CRGB leds[NUM_LEDS];
void setup() {
    FastLED.addLeds<WS2811, DATA_PIN, GRB>(leds, NUM_LEDS);
    FastLED.setBrightness(10);
    FastLED.clear(true);
}

void loop() {
 FastLED.clear(true);
 
//  Fear 1
  int i = 0; 
  int f1p[] = {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,47,46,45,39,38,32,48,49,50,56,57,63,79,78,77,75,74,73,72,71,70,68,67,66,65,64,80,81,82,84,85,86,87,88,89,91,92,93,94,95,111,110,109,105,104,103,102,98,97,96,112,113,114,118,119,120,121,125,126,127,143,142,141,139,138,137,136,135,134,132,131,130,129,128,144,145,146,148,149,150,151,152,153,155,156,157,158,159,175,174,173,171,170,169,168,167,166,164,163,162,161,160,176,177,178,180,181,182,183,184,185,187,188,189,190,191,207,206,205,203,202,201,200,199,198,192,208,209,210,212,213,214,215,216,217,223,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,303,302,298,297,296,291,290,289,288,304,310,311,317,318,319,335,333,332,331,329,328,326,325,324,322,321,320,336,338,339,340,342,343,345,346,347,349,350,351,367,361,360,354,353,352,368,374,375,380,381,382,383,399,397,396,395,393,392,390,388,387,386,385,384,400,402,403,404,406,407,409,412,413,414,415,431,429,428,427,425,424,422,421,419,418,417,416,432,434,435,436,438,439,441,442,445,446,447,463,461,460,459,457,456,454,453,452,450,449,448,464,466,467,468,470,471,473,474,475,477,478,479,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511};
  int sizeoff1p = sizeof(f1p)/sizeof(int);
  for(i = 0; i < sizeoff1p+1; i++){
    leds[f1p[i]] = CRGB::Purple;
  }
  FastLED.show();
  delay(15000);
  FastLED.clear(true);
  
//  Fear 2
  int j = 0;
  const int f2p[] = {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,38,39,46,47,48,49,56,57,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,89,98,99,100,101,102,103,110,111,112,113,120,121,122,123,124,125,134,135,142,143,144,145,152,153,166,167,174,175,176,177,184,185,198,199,206,207,208,209,216,217,225,226,227,228,229,230,231,238,239,240,241,248,249,250,251,252,253,254,257,258,259,260,261,262,266,267,268,269,274,275,276,277,281,282,283,284,285,286,289,290,293,294,296,297,302,303,304,305,310,311,313,314,317,318,321,322,325,326,328,329,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,353,354,355,356,357,358,360,361,362,363,364,365,366,367,368,369,374,375,377,378,379,386,387,388,389,390,392,393,398,399,400,401,406,407,409,410,412,413,417,418,421,422,424,425,430,431,432,433,438,439,441,442,445,446,449,450,453,454,456,457,462,463,464,465,470,471,473,474,478,479,480,481,485,486,488,489,494,495,496,497,502,503,505,506,510,511};
  int sizeoff2p = sizeof(f2p)/sizeof(int);
  for(j = 0; j < sizeoff2p+1; j++){
    leds[f2p[j]] = CRGB::Purple;
  }
  FastLED.show();
  delay(15000);
  FastLED.clear(true);

  //  Fear 3
  i = 0;
  const int f3p[] = {54,55,56,68,70,71,72,73,74,76,82,84,85,86,87,88,89,90,92,98,101,102,103,104,105,106,107,110,116,117,118,119,120,121,122,132,133,134,135,136,137,138,139,140,146,148,149,150,151,152,153,154,156,162,165,166,167,168,169,170,171,174,179,181,182,183,184,185,187,195,199,200,201,205,209,221,294,295,296,297,309,314,315,324,331,340,343,345,347,356,358,360,363,372,379,388,395,404,411,420,427,436,443,452,453,457,459,469,471,472,473};
  int sizeoff3p = sizeof(f3p)/sizeof(int);
  for(i = 0; i < sizeoff3p+1; i++){
    leds[f3p[i]] = CRGB::Purple;
  }
  i = 0;
  const int f3r[] = {214,216};
  int sizeoff3r = sizeof(f3r);
  for(i = 0; i < sizeoff3r+1; i++){
    leds[f3r[i]] = CRGB::Red;
  }
  FastLED.show();
  delay(15000);
  FastLED.clear(true);

  // .....
}
